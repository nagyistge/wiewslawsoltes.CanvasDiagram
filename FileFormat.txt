
-------------------------------------------------------------------------------
Model
-------------------------------------------------------------------------------

Model has several dictionaries:

- Dictionary of Basic elements conatining Primitive types like: Ponit, Line, Text etc.
  Basic elements Pin, Line, Text etc. have own Bounds

- Dictionary of Custom elements containing custom types built from primitive types.
  Custom elements have Polygon bounds built from Pins describing current element.

    [Styles Section]

    PinStyles
    LineStyles
    ArcStyles
    CircleStyles
    TextStyles

    [Primitives Section]

    Pins
    Lines
    Arcs
    Circles
    Texts

    [Pins Section]

    ElementPins
    ConnectorPins

    [Elements Section]

    CustomElements
    ReferenceElements

-------------------------------------------------------------------------------
Model Data Formats
-------------------------------------------------------------------------------

string => string
bool   => int
       where:
       0 => false
       1 => true
float  => float
int    => int

-------------------------------------------------------------------------------
Model Line Format
-------------------------------------------------------------------------------

<string:type>;<int:Id>;...;...
    where:
        string:type => line type
        int:Id       => Basic or Custom element has unique Id
       ...         => data array of arguments
       ;           => data array argument separator

-------------------------------------------------------------------------------
PinStyle Format (Basic Element)
-------------------------------------------------------------------------------

<string:PS>;...
    string:PS         => element of Type PinStyle
arguments:
    int:Id            => Style Id
    int:A             => color alpha
    int:R             => color red
    int:G             => color green
    int:B             => color blue
    int:IsFilled      => IsFilled flag
    float:StrokeWidth => stroke width
    float:Radius      => Pin radius

-------------------------------------------------------------------------------
LineStyle Format (Basic Element)
-------------------------------------------------------------------------------

<string:LS>;...
    string:LS         => element of Type LineStyle
arguments:
    int:Id            => Style Id
    int:A             => color alpha
    int:R             => color red
    int:G             => color green
    int:B             => color blue
    int:IsFilled      => IsFilled flag
    float:StrokeWidth => stroke width

-------------------------------------------------------------------------------
RectangleStyle Format (Basic Element)
-------------------------------------------------------------------------------

<string:RS>;...
    string:RS         => element of Type RectangleStyle
arguments:
    int:Id            => Style Id
    int:A             => color alpha
    int:R             => color red
    int:G             => color green
    int:B             => color blue
    int:IsFilled      => IsFilled flag
    float:StrokeWidth => stroke width

-------------------------------------------------------------------------------
CircleStyle Format (Basic Element)
-------------------------------------------------------------------------------

<string:CS>;...
    string:CS         => element of Type CircleStyle
arguments:
    int:Id            => Style Id
    int:A             => color alpha
    int:R             => color red
    int:G             => color green
    int:B             => color blue
    int:IsFilled      => IsFilled flag
    float:StrokeWidth => stroke width

-------------------------------------------------------------------------------
ArcStyle Format (Basic Element)
-------------------------------------------------------------------------------

<string:AS>;...
    string:AS         => element of Type ArcStyle
arguments:
    int:Id            => Style Id
    int:A             => color alpha
    int:R             => color red
    int:G             => color green
    int:B             => color blue
    int:IsFilled      => IsFilled flag
    float:StrokeWidth => stroke width

-------------------------------------------------------------------------------
TextStyle Format (Basic Element)
-------------------------------------------------------------------------------

<string:TS>;...
    string:TS         => element of Type TextStyle
arguments:
    int:Id            => Style Id
    int:A             => color alpha
    int:R             => color red
    int:G             => color green
    int:B             => color blue
    int:IsFilled      => IsFilled flag
    float:StrokeWidth => stroke width
    int:HAlignment    => text Horizontal Alignment flag
    int:VAlignment    => text Vertical Alignment flag
    float:Size        => text Size

-------------------------------------------------------------------------------
Pin Format (Basic Element)
-------------------------------------------------------------------------------

<string:P>;...
    string:P        => element of Type Pin
arguments:
    int:Id          => Pin Id
    int:StyleId     => PinStyle Id (reference)
    float:X         => X coordinate
    float:Y         => Y coordinate
    int:IsConnector => IsConnector flag

Example 1:

P;12;100;60,0;30,0;0

where:
    P    => type is Pin
    12   => Pin Id is 12
    100  => PinStyle Id is 100 (reference to PinStyle with Id = 100)
    60,0 => x coordinate is 60,0
    30,0 => y coordinate is 30,0
    0    => IsConnector flag = false

Example 2:

P;32;100;60,0;30,0;0

where:
    P    => type is Pin
    32   => Pin Id is 32
    100  => PinStyle Id is 100 (reference to PinStyle with Id = 100)
    60,0 => x coordinate is 120,0
    30,0 => y coordinate is 30,0
    0    => IsConnector flag = false

-------------------------------------------------------------------------------
Line Format (Basic Element)
-------------------------------------------------------------------------------

<string:L>;...
    string:L	    => element of type Line
arguments:
    int:Id          => unique Line Id
    int:StyleId     => LineStyle Id (reference)
    int:StartId     => Pin Id used for line Start (reference)
    int:EndId       => Pin Id used for line End (reference)

Example:

L;5;50;12;32

where:
    L    => type is Line
    5    => Line Id is 5
    50   => LineStyle Id is 50 (reference to LineStyle with Id = 50)
    12   => line start Pin is 12 (reference to Pin with Id = 12)
    32   => line start Pin is 32 (reference to Pin with Id = 12)

-------------------------------------------------------------------------------
Rectangle Format (Basic Element)
-------------------------------------------------------------------------------

<string:R>;...
    string:R	      => element of type Rectangle
arguments:
    int:Id            => unique Rectangle Id
    int:StyleId       => RectangleStyle Id (reference)
    int:TopLeftId     => Pin Id used for rect TopLeft corner (reference)
    int:BottomRightId => Pin Id used for rect BottomRight corner (reference)

-------------------------------------------------------------------------------
Circle Format (Basic Element)
-------------------------------------------------------------------------------

<string:C>;...
    string:C	      => element of type Circle
arguments:
    int:Id            => unique Circle Id
    int:StyleId       => CircleStyle Id (reference)
    int:CenterId      => Pin Id used for circle Center (reference)
    int:RadiusId      => Pin Id used for circle Radius (reference)

-------------------------------------------------------------------------------
Arc Format (Basic Element)
-------------------------------------------------------------------------------

<string:A>;...
    string:A	      => element of type Arc
arguments:
    int:Id            => unique ArcId
    int:StyleId       => ArcStyle Id (reference)
    int:StartId       => Pin Id used for arc Start (reference)
    int:EndId         => Pin Id used for arc End (reference)
    int:CenterId      => Pin Id used for arc Center (reference)

-------------------------------------------------------------------------------
Text Format (Basic Element)
-------------------------------------------------------------------------------

<string:T>;...
    string:T        => element of Type Text
arguments:
    int:Id          => unique Text Id
    int:StyleId     => TextStyle Id (reference)
    int:PositionID  => Pin Id used for Text location (reference)
    string:Text     => Text string to display

Example:

T;51;33;10;&
    where:
    T    => type is Text
    51   => Text Id is 51
    33   => TextStyle Id is 33 (reference to TextStyle with Id = 33)
    10   => line start Pin is 12 (reference to Pin with Id = 10)

-------------------------------------------------------------------------------
Custom Element Format
-------------------------------------------------------------------------------

<string:type>;...
    string:type    => custom element Type
                      can not be same as Basic types eg. P, L, T etc.
                      minimum lenght for Type string is 3
where:                
    int:Id         => unique Custom Id
    ...            => custom element data array arguments
                      where each argument conatains Reference to Basic element
                      or other Custom elements and can also have some Paramteres

    ---------------------------
    Data array argument format:
    ---------------------------

    <string:type>;<int:Id>
    where:
        string:type => Custom, Basic or Reference type name

----------------------------------------------
Example format for Reference to Basic Element:
----------------------------------------------

    Line   => <string:L>;<int:Id>
    Pin    => <string:P>;<int:Id>
    Text   => <string:T>;<int:Id>

or use Reference to definition of a Custom element:

    CustomElement;12
    CustomElement  => CustomElement;12
    
or use Reference Copy of a Custom element:

    CustomElement;12
    CustomElement  => !CustomElement;12

-------------------------------------------------------------------------------
Reference Element Format
-------------------------------------------------------------------------------

<string:!type>;...
    string:!type    => element of Type Reference copy to Custom Type

arguments:
    float:X         => X coordinate of reference copy
    float:Y         => Y coordinate of reference copy
    float:Width     => Width of the reference copy
    float:Height    => Height of the reference copy
    float:Rotation  => Rotation agle of the reference copy
    ...             => array of referenced variable connections


TODO: All reference arguments can be variables.


Reference copy Type of Custom types are made using '!' Type prefix.


-------------------
Variable Reference:
-------------------

    to Text   => <string:T>;<int:TextId>;<string:V>;<int:VariableId>;
                 arguments: 
                 int:PositionID  => Text Id used by Reference (reference)




TODO: Add Variable references to Custom type Pin or Text using Ids.






    
--------------------------------------------
Example 1: AndGate custom element definition
--------------------------------------------

    // TODO: Add Pin (2 styles for lines and connectors),Line and Text style definitions.

    // pins used for lines
    P;0;100;0,0;0,0;0
    P;1;100;30,0;0,0;0
    P;2;100;30,0;30,0;0
    P;3;100;0,0;30,0;0
    P;4;100;0,0;30,0;0
    // lines
    L;4;101;0;1
    L;5;101;1;2
    L;6;101;2;3
    L;7;101;3;0
    // text
    T;9;102;10;&;0
    // connectors
    P;10;99;0,0;15,0;1
    P;11;99;30,0;15,0;1
    P;12;99;15,0;0,0;1
    P;13;99;30,0;15,0;1
    // definition of custom element AndGate
    AndGate;90;L;4;L;5;L;6;L;7;T;8;P;10;P;11;P;12;P;13



Example 2: Sharing primitive types with many custom elements.

    Lines can be share among different custom elements.

    // definition of custom element OrGate
    // using all primitive types from AndGate elment
    OrGate;90;L;4;L;5;L;6;L;7;T;8;P;10;P;11;P;12;P;13

    It is not always recommended because when AndGate definition
    of primitive type is changes OrGate definition will also change.

    To reference custom type use '!' before custom element type.
    SomeCustomType;44;!SomeRefCustomType;46
    where:
          !SomeRefCustomType is reference to custom element with Id = 46




Example 3: using Reference Copy:

    // define Location of AndGate reference
    P;77;102;60,0;120,0;0
    // reference AndGate element at Pin 77 location
    !AndGate;77;76




-------------------------------------------------------------------------------
Variable Format
-------------------------------------------------------------------------------



TODO: ...


Variables can be assigned to Pin or Text basic elements. 
Every changed in variable is notified to assiociated Pin or Text.






-------------------------------------------------------------------------------
Transformations and Constrains
-------------------------------------------------------------------------------

Each element can have many custom transformation and constrains applied.

-------------------------------------------------------------------------------
NOTES
-------------------------------------------------------------------------------

- For drawing list use only Reference elements.

- Wire is not a line but custom element made of Line and of start and end pins.

- Custom element Reference Copy uses for example to drawi line
  Location offset of Reference Copy to draw based on referenced Line.
  
  Custom element Pin is always normalized to location [0,0 0,0]
  and draw relative to References Copy Location.

    For example when Location of Reference pin is [60,0 120,0]:
        P;77;102;60,0;120,0;0
    following Line definition (L with Id 4):
        P;0;100;0,0;0,0;0
        P;1;100;30,0;0,0;0
        L;4;101;0;1
    is drawn using start pin (P with Id 0):
        X1 = 60,0 + 0,0
        Y1 = 120 + 0,0
    and end pin (P with Id 1):
        X2 = 60,0 + 30,0
        Y2 = 120 + 0,0
